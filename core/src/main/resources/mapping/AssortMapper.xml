<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soufang.mapper.AssortMapper">
    <resultMap id="BaseResultMap" type="com.soufang.model.Assort">
        <id column="assort_id" property="assortId" jdbcType="BIGINT"/>
        <result column="assort_name" property="assortName" jdbcType="VARCHAR"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="assort_level" property="assortLevel" jdbcType="INTEGER"/>
        <result column="key1" property="key1" jdbcType="VARCHAR"/>
        <result column="key2" property="key2" jdbcType="VARCHAR"/>
        <result column="key3" property="key3" jdbcType="VARCHAR"/>
        <result column="key4" property="key4" jdbcType="VARCHAR"/>
        <result column="key5" property="key5" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ResultMap" type="com.soufang.base.dto.assort.AssortDto">
        <id column="assort_id" property="assortId" jdbcType="BIGINT"/>
        <result column="assort_name" property="assortName" jdbcType="VARCHAR"/>
        <collection property="children" ofType="com.soufang.base.dto.assort.AssortDto">
            <id column="assort_id2" property="assortId" jdbcType="BIGINT"/>
            <result column="assort_name2" property="assortName" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>


    <select id="getAssortByParentId" parameterType="java.lang.Long" resultMap="ResultMap">
        select parent.*, child.assort_id as assort_id2 , child.assort_name as assort_name2 from t_assort parent left join t_assort child
        on parent.assort_id = child.parent_id
        where parent.parent_id = #{parendId}
    </select>

    <sql id="Base_Column_List">
    assort_id, assort_name, parent_id, sort, assort_level, key1, key2, key3, key4, key5
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_assort
        where assort_id = #{assortId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_assort
    where assort_id = #{assortId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.soufang.model.Assort">
    insert into t_assort (assort_id, assort_name, parent_id, 
      sort, assort_level, key1, 
      key2, key3, key4, key5
      )
    values (#{assortId,jdbcType=BIGINT}, #{assortName,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{sort,jdbcType=INTEGER}, #{assortLevel,jdbcType=INTEGER}, #{key1,jdbcType=VARCHAR}, 
      #{key2,jdbcType=VARCHAR}, #{key3,jdbcType=VARCHAR}, #{key4,jdbcType=VARCHAR}, #{key5,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.soufang.model.Assort">
        insert into t_assort
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="assortId != null">
                assort_id,
            </if>
            <if test="assortName != null">
                assort_name,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="assortLevel != null">
                assort_level,
            </if>
            <if test="key1 != null">
                key1,
            </if>
            <if test="key2 != null">
                key2,
            </if>
            <if test="key3 != null">
                key3,
            </if>
            <if test="key4 != null">
                key4,
            </if>
            <if test="key5 != null">
                key5,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="assortId != null">
                #{assortId,jdbcType=BIGINT},
            </if>
            <if test="assortName != null">
                #{assortName,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="assortLevel != null">
                #{assortLevel,jdbcType=INTEGER},
            </if>
            <if test="key1 != null">
                #{key1,jdbcType=VARCHAR},
            </if>
            <if test="key2 != null">
                #{key2,jdbcType=VARCHAR},
            </if>
            <if test="key3 != null">
                #{key3,jdbcType=VARCHAR},
            </if>
            <if test="key4 != null">
                #{key4,jdbcType=VARCHAR},
            </if>
            <if test="key5 != null">
                #{key5,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.soufang.model.Assort">
        update t_assort
        <set>
            <if test="assortName != null">
                assort_name = #{assortName,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="assortLevel != null">
                assort_level = #{assortLevel,jdbcType=INTEGER},
            </if>
            <if test="key1 != null">
                key1 = #{key1,jdbcType=VARCHAR},
            </if>
            <if test="key2 != null">
                key2 = #{key2,jdbcType=VARCHAR},
            </if>
            <if test="key3 != null">
                key3 = #{key3,jdbcType=VARCHAR},
            </if>
            <if test="key4 != null">
                key4 = #{key4,jdbcType=VARCHAR},
            </if>
            <if test="key5 != null">
                key5 = #{key5,jdbcType=VARCHAR},
            </if>
        </set>
        where assort_id = #{assortId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.soufang.model.Assort">
    update t_assort
    set assort_name = #{assortName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      sort = #{sort,jdbcType=INTEGER},
      assort_level = #{assortLevel,jdbcType=INTEGER},
      key1 = #{key1,jdbcType=VARCHAR},
      key2 = #{key2,jdbcType=VARCHAR},
      key3 = #{key3,jdbcType=VARCHAR},
      key4 = #{key4,jdbcType=VARCHAR},
      key5 = #{key5,jdbcType=VARCHAR}
    where assort_id = #{assortId,jdbcType=BIGINT}
  </update>

    <select id="getAll" resultMap="BaseResultMap">
    select * from t_assort
  </select>

    <select id="getList" resultMap="BaseResultMap" parameterType="com.soufang.model.Assort">
        select * from t_assort
        where 1=1
        <if test="assortId != null">
            and assort_id = #{assortId}
        </if>
        <if test="assortName != null">
            and assort_name = #{assortName}
        </if>
        <if test="parentId != null">
            and parent_id = #{parentId}
        </if>
        <if test="assortLevel != null">
            and assort_level = #{assortLevel}
        </if>
        <if test="sort != null">
            and sort = #{sort}
        </if>
    </select>

    <select id="getAssortIdAndName" resultType="java.util.Map">
      select assort_id as id,parent_id as pId, assort_name as name from t_assort
    </select>

    <select id="getIdName" resultType="java.util.Map">
      select assort_id as assortId,assort_name as assortName from t_assort
    </select>



    <select id="getAssortAByParentId" parameterType="java.lang.Long" resultMap="ResultMap">
        select <include refid="Base_Column_List"></include>  from t_assort where parent_id = #{parendId}
    </select>

    <select id="getAssortByKey" parameterType="com.soufang.base.search.assort.AssortSo" resultType="java.util.Map">
        SELECT A.assort_id as aId,A.assort_name as aName, B.assort_id bId, B.assort_name bName,C.assort_id cId,C.assort_name cName  from t_assort A LEFT JOIN t_assort B ON B.parent_id=A.assort_id LEFT JOIN t_assort C on C.parent_id = B.assort_id
        where 1=1
        <if test="assortIdB!=null and assortIdB != 0">
            and B.assort_id=#{assortIdB}
        </if>
        <if test="assortIdC!=null and assortIdC != 0">
            and C.assort_id=#{assortIdC}
        </if>
        LIMIT 1
    </select>

    <!--通过名称查询ID-->
    <select id="getAssortIdByName" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT assort_id AS productAssort FROM t_assort WHERE assort_name=#{assortName}
    </select>

    <!--查询上级ID-->
    <select id="selParentIdByAssortId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select assort_id from t_assort where assort_id=(select parent_id from t_assort where assort_id=#{productAssort})
    </select>

</mapper>